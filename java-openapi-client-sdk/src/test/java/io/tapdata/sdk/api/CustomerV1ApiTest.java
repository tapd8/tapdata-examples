/*
 * Tapdata OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: moa-v1.1.0-117-g6b02a67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tapdata.sdk.api;

import io.tapdata.sdk.ApiException;
import io.tapdata.sdk.ApiClient;
import io.tapdata.sdk.model.Customer;
import io.tapdata.sdk.model.Filter;
import io.tapdata.sdk.model.InlineResponse200;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerV1Api
 */
@Ignore
public class CustomerV1ApiTest {

    private final ApiClient apiClient = new ApiClient(
        "your_client_id",
        "your_client_secret",
        "api_url", // http://127.0.0.1:3080
        "auth_url" // http://127.0.0.1:3030/oauth/token
    );
    private final CustomerV1Api api = new CustomerV1Api(apiClient);

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerV1ControllerCreateTest() throws ApiException {
        Customer customer = new Customer();
        Customer response = api.customerV1ControllerCreate(customer);

        // TODO: test validations
    }
    
    /**
     * delete record by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerV1ControllerDeleteByIdTest() throws ApiException {
        String id = new String();
        api.customerV1ControllerDeleteById(id);

        // TODO: test validations
    }
    
    /**
     * get record by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerV1ControllerFindByIdTest() throws ApiException {
        String id = new String();
        Customer response = api.customerV1ControllerFindById(id);

        // TODO: test validations
    }
    
    /**
     * get record list by page and limit
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerV1ControllerFindPageTest() throws ApiException {
        Filter filter = new Filter();
        InlineResponse200 response = api.customerV1ControllerFindPage(filter);

        // TODO: test validations
    }
    
    /**
     * update record by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerV1ControllerUpdateByIdTest() throws ApiException {
        String id = new String();
        Customer customer = new Customer();
        api.customerV1ControllerUpdateById(id, customer);

        // TODO: test validations
    }
    
}
